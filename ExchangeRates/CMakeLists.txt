cmake_minimum_required(VERSION 3.16)

project(ExchangeRates VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOMOC ON)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

find_package(Qt6 6.2 COMPONENTS Quick REQUIRED)
find_package(Qt6 6.2 COMPONENTS Widgets REQUIRED)

# The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
# generated by CMake. This variable contains the .icns file name,
# without the path.
set(MACOSX_BUNDLE_ICON_FILE icon.icns)

set(LSUIElement 0)

# And the following tells CMake where to find and install the file itself.
set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/res/icon.icns")
set_source_files_properties(${app_icon_macos} PROPERTIES
       MACOSX_PACKAGE_LOCATION "Resources")

qt_add_executable(appExchangeRates MACOSX_BUNDLE
    main.cpp
    src/appcontroller.h
    src/appcontroller.cpp
    src/httprequestworker.h
    src/httprequestworker.cpp
    src/currencymodel.h
    src/currencymodel.cpp
    res.qrc
    ${app_icon_macos}
)

qt_add_qml_module(appExchangeRates
    URI ExchangeRates
    VERSION 1.0
    QML_FILES main.qml qml/NotificationWindow.qml
)

set_target_properties(appExchangeRates PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
    LSUIElement 0
)

target_compile_definitions(appExchangeRates
    PRIVATE $<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:QT_QML_DEBUG>)
target_link_libraries(appExchangeRates
    PRIVATE Qt6::Quick)

target_link_libraries(appExchangeRates PRIVATE Qt6::Widgets)
